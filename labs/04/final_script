Script started on 2020-02-28 13:49:53-0500

]0;jpb34@gold14: ~/Documents/214/projects/04/clojure[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04/clojure[00m$ 
]0;jpb34@gold14: ~/Documents/214/projects/04/clojure[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04/clojure[00m$ at  cat src/logTable.clj
;;;; logTable.clj displays a table of logarithms.
;;;;
;;;; Input: start, stop and increment, three numbers.
;;;; Precondition: start < stop && increment > 0.
;;;; Output: A table of logarithms from start to stop,
;;;;          with interval of increment.
;;;;
;;;; Begun by: Prof. Adams, for CS 214 at Calvin College.
;;;; Completed by: Jacob Brink
;;;; Date: 2/28/2020
;;;; Lab: 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns logTable)                                 ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; displayLogTable() recursively generates the log-table.
;;; Receive: start the first value for the table;
;;;          stop, the last  value for the table;
;;;           step, the step value for the table;
;;; Precondition: start < stop && increment > 0.
;;; Output: The table of logs from start to stop, by step.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(defn displayLogTable [start stop step]
  (if (<= start stop)
    (do
      (printf "The logarithm of %f is %f%n" start (Math/log10 start))
      (displayLogTable (+ start step) stop step)
      )
    )
  )


;; loop (indirect-recursion) version
(defn displayLogTable2 [start stop step]
  (loop [i start]                           ; set i to start
    (when (<= i stop)                       ; if i <= stop:
      (printf "The logarithm of %f is %f\n" ;  print one line
              i (Math/log10 i)
              )
      (recur (+ i step))                    ; recurse, i += step
      )
    )
  )

;; indirect/tail-recursive version (just using recur)
(defn displayLogTable3 [start stop step]
  (if (<= start stop)                     ; if start <= stop:
    (do                                      ; do these two things:
      (printf "The logarithm of %f is %f\n"  ; - print one line
              start (Math/log10 start)
              )
      (recur (+ start step) stop step)       ; - recurse, start+=step
      )
    )
  )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; -main is a 'driver' for the displayLogTable() functions.
;;; Input: start, stop and increment.
;;; Output: The table of logarithms 
;;;          from start to stop by increment
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn -main []
 (println "To display a table of logarithms,")
 (print " enter the start, stop, and increment values: ") (flush)
 (let
    [ start (double (read))
      stop (double (read))
      increment (double (read))
    ] 
    (println)
    (displayLogTable start stop increment) 
    (println)
    (displayLogTable2 start stop increment) 
    (println)
    (displayLogTable3 start stop increment) 
    (println)
 )
)

]0;jpb34@gold14: ~/Documents/214/projects/04/clojure[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04/clojure[00m$ clojure -m logTable
To display a table of logarithms,
 enter the start, stop, and increment values: 1
2
0.5

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030

The logarithm of 1.000000 is 0.000000
The logarithm of 1.500000 is 0.176091
The logarithm of 2.000000 is 0.301030

]0;jpb34@gold14: ~/Documents/214/projects/04/clojure[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04/clojure[00m$ c exit

Script done on 2020-02-28 13:50:47-0500
Script started on 2020-02-27 16:10:13-0500
]0;jpb34@cs-ssh: ~/Documents/214/labs/04jpb34@cs-ssh:~/Documents/214/labs/04$ cat LogTable.java



/* LogTable.java displays a table of logarithms.
 *
 * Input: start, stop and increment, three doubles.
 * PRE: start < stop && increment > 0.
 * Output: A table of logarithms from start to stop,
 *         with increment as the step value.
 * Begun by: Nelesen, for CS 214 at Calvin College.
 * Completed by: Jacob Brink
 * Lab: 4
 * Date: 2/28/2020
 ********************************************************/
import java.util.Scanner; 		// Get input

class LogTable{

  public static void main(String[] args){
    Scanner keyboard = new Scanner(System.in);
    System.out.println("To display a table of logarithms,");
    System.out.println("enter the start, stop and increment values: ");
    double start, stop, increment;
    start = keyboard.nextDouble();
    stop = keyboard.nextDouble();
    increment = keyboard.nextDouble();

    double counter = start;
    while (counter <= stop) {
	System.out.println(String.format("The logarithm of %s is %s", counter, Math.log10(counter)));
	counter += increment;
    }

  }
}

]0;jpb34@cs-ssh: ~/Documents/214/labs/04jpb34@cs-ssh:~/Documents/214/labs/04$ javac LogTable.java
]0;jpb34@cs-ssh: ~/Documents/214/labs/04jpb34@cs-ssh:~/Documents/214/labs/04$ java l LogTable
To display a table of logarithms,
enter the start, stop and increment values: 
1
2
.5
The logarithm of 1.0 is 0.0
The logarithm of 1.5 is 0.17609125905568124
The logarithm of 2.0 is 0.3010299956639812
]0;jpb34@cs-ssh: ~/Documents/214/labs/04jpb34@cs-ssh:~/Documents/214/labs/04$ java LogTable
To display a table of logarithms,
enter the start, stop and increment values: 
0 1
20  40
2
The logarithm of 1.0 is 0.0
The logarithm of 3.0 is 0.47712125471966244
The logarithm of 5.0 is 0.6989700043360189
The logarithm of 7.0 is 0.8450980400142568
The logarithm of 9.0 is 0.9542425094393249
The logarithm of 11.0 is 1.0413926851582251
The logarithm of 13.0 is 1.1139433523068367
The logarithm of 15.0 is 1.1760912590556813
The logarithm of 17.0 is 1.2304489213782739
The logarithm of 19.0 is 1.2787536009528289
The logarithm of 21.0 is 1.3222192947339193
The logarithm of 23.0 is 1.3617278360175928
The logarithm of 25.0 is 1.3979400086720377
The logarithm of 27.0 is 1.4313637641589874
The logarithm of 29.0 is 1.462397997898956
The logarithm of 31.0 is 1.4913616938342726
The logarithm of 33.0 is 1.5185139398778875
The logarithm of 35.0 is 1.5440680443502757
The logarithm of 37.0 is 1.568201724066995
The logarithm of 39.0 is 1.591064607026499
]0;jpb34@cs-ssh: ~/Documents/214/labs/04jpb34@cs-ssh:~/Documents/214/labs/04$ exit

Script done on 2020-02-27 16:11:15-0500
Script started on 2020-02-28 13:49:05-0500
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ cat logTqable     able.rb
#! /usr/bin/ruby
# logTable.rb displays a table of logarithms
#
# Begun by: Prof. Adams, for CS 214 at Calvin College.
# Completed by: Jacob Brink
# Date: 2/28/2020
# Lab: 4
#
# Input:  The start, stop and increment values
# Precondition: The start value is less than the stop value, 
#     and the increment is greater than 0
# Output: A table of logarithms from start to stop, with increment
#     as the step value


if __FILE__ == $0
   print "Enter the start value: "
   start = gets.chomp.to_f
   print "Enter the stop value: "
   stop = gets.chomp.to_f
   print "Enter the increment value: "
   increment = gets.chomp.to_f

   while start <= stop
     puts "The logarithm of #{start} is #{Math.log(start)}"
     start += increment
   end
   
#  Replace this line with a loop to display the log table 
end

]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ ruby logTable.rb
Enter the start value: 1
Enter the stop value: 2
Enter the increment value: 0.5
The logarithm of 1.0 is 0.0
The logarithm of 1.5 is 0.4054651081081644
The logarithm of 2.0 is 0.6931471805599453
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ ruby logTable.rb
Enter the start value: 1
Enter the stop value: 5
Enter the increment value: 1
The logarithm of 1.0 is 0.0
The logarithm of 2.0 is 0.6931471805599453
The logarithm of 3.0 is 1.0986122886681098
The logarithm of 4.0 is 1.3862943611198906
The logarithm of 5.0 is 1.6094379124341003
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ exit

Script done on 2020-02-28 13:49:31-0500
Script started on 2020-02-28 13:45:54-0500
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ cat log_table.ta a  adb
-- log_table.adb computes a table of logarithms.
--
-- Input: start, stop, increment, three reals.
-- Precondition: increment is positive.
-- Output: A table of logarithms beginning with log(start),
--         ending with log(stop), with intervals of increment.
--
-- Begun by: Prof. Adams, for CS 214 at Calvin College.
-- Completed by: Jacob Brink
-- Lab: 04
-- Date: 2/28/2020
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Numerics.Elementary_Functions;

procedure log_table is

   Start, Stop, Increment : Float;

begin                                           -- Prompt for input
   Put_Line("To print a table of logarithms,");
   Put(" enter the start, stop, and increment values: ");
   Get(Start); Get(Stop); Get(Increment);

   while (Start <= Stop)
   loop
      Put("The logarithm of ");
      Put(Start);
      Put(" is ");
      Put(log(Start, 10.0));
      New_Line;
      Start := Start + Increment;
   end loop;
	

end log_table;

]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ gnatmake log_table.adb
gnatmake: "log_table" up to date.
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ ./log_table
To print a table of logarithms,
 enter the start, stop, and increment values: 1
2
0.5
The logarithm of  1.00000E+00 is  0.00000E+00
The logarithm of  1.50000E+00 is  1.76091E-01
The logarithm of  2.00000E+00 is  3.01030E-01
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ ls
[0m[01;34mclojure[0m        log_table.adb~  LogTable.java   logTable.rb   script.adb
[01;32mlog_table[0m      log_table.ali   LogTable.java~  logTable.rb~  script.java
log_table.adb  LogTable.class  log_table.o     Makefile      typescript
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ ./log_Table     tabe le
To print a table of logarithms,
 enter the start, stop, and increment values: 1
20
2
The logarithm of  1.00000E+00 is  0.00000E+00
The logarithm of  3.00000E+00 is  4.77121E-01
The logarithm of  5.00000E+00 is  6.98970E-01
The logarithm of  7.00000E+00 is  8.45098E-01
The logarithm of  9.00000E+00 is  9.54243E-01
The logarithm of  1.10000E+01 is  1.04139E+00
The logarithm of  1.30000E+01 is  1.11394E+00
The logarithm of  1.50000E+01 is  1.17609E+00
The logarithm of  1.70000E+01 is  1.23045E+00
The logarithm of  1.90000E+01 is  1.27875E+00
]0;jpb34@gold14: ~/Documents/214/projects/04[01;32mjpb34@gold14[00m:[01;34m~/Documents/214/projects/04[00m$ exit

Script done on 2020-02-28 13:48:00-0500
